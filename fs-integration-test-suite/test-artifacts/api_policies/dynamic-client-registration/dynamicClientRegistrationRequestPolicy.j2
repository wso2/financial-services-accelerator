<!--
 ~ Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).
 ~
 ~ WSO2 LLC. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~     http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied. See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->

<class name="org.wso2.financial.services.apim.mediation.policies.dynamic.client.registration.DynamicClientRegistrationRequestMediator">
    <property name="validateRequestJWT" value="{{validateRequestJWT}}"/>
    <property name="jwksEndpointName" value="{{jwksEndpointName}}"/>
    <property name="clientNameAttributeName" value="{{clientNameAttributeName}}"/>
    <property name="useSoftwareIdAsAppName" value="{{useSoftwareIdAsAppName}}"/>
    <property name="jwksEndpointTimeout" value="{{jwksEndpointTimeout}}"/>
</class>

<filter source="$ctx:REST_METHOD" regex="POST|PUT">
    <then>
        <!-- Ensure Synapse handles the message as JSON -->
        <property name="messageType" value="application/json" scope="axis2"/>
        <property name="Content-Type" value="application/json" scope="transport"/>

        <!-- Save the original payload -->
        <property name="original_payload" expression="json-eval($)" scope="default"/>

        <!-- Set the properties set from class mediator to the inline properties -->
        <property name="clientName" expression="get-property('client_name')"/>
        <property name="jwksUri" expression="get-property('jwks_uri')"/>
        <property name="extAppName" expression="get-property('ext_application_display_name')"/>
        <property name="tokenEPReusePvtKeyJWT" expression="get-property('token_endpoint_allow_reuse_pvt_key_jwt')"/>

        <!-- Modify payload to include the required properties -->
        <filter xpath="get-property('token_endpoint_allow_reuse_pvt_key_jwt')">
            <then>
                <enrich>
                    <source clone="true" type="inline">
                        {"client_name": {$ctx:clientName},
                        "jwks_uri": {$ctx:jwksUri},
                        "ext_application_display_name": {$ctx:extAppName},
                        "token_endpoint_allow_reuse_pvt_key_jwt": {$ctx:tokenEPReusePvtKeyJWT},
                        "token_type_extension" : true,
                        "require_signed_request_object": true,
                        "tls_client_certificate_bound_access_tokens": true}
                    </source>
                    <target action="child" xpath="json-eval($)"/>
                </enrich>
            </then>
            <else>
                <enrich>
                    <source clone="true" type="inline">
                        {"client_name": {$ctx:clientName},
                        "jwks_uri": {$ctx:jwksUri},
                        "ext_application_display_name": {$ctx:extAppName},
                        "token_type_extension" : true,
                        "require_signed_request_object": true,
                        "tls_client_certificate_bound_access_tokens": true}
                    </source>
                    <target action="child" xpath="json-eval($)"/>
               </enrich>
            </else>
         </filter>
    </then>
</filter>
